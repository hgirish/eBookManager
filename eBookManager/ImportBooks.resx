<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tvImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="tvImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD0
        DgAAAk1TRnQBSQFMAgEBBgEAARgBAAEYAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wgAAf8B9AHzARsB9AQA
        Af8B9AHyCPEB8wL0Av8iAAH/AfMBGwEaAZkEeQHzAf8EAAH0Af8E9ATzAe8D/yMAARsCmQGaAZkEeQF0
        AfMB/wMAAfQE8wLyA/ECvAH/JAAB8gF5A5oEeQF0AfAB9AL/AQAB9AnzAfIB9AG8Af8jAAHyAXkCmgV5
        AXQD9AH/AQAC9AHxAW8HRgHwAfEB8yMAAfIBeQOaBXkD/wIAAvQB8QFGAZMBIAJAAyAB8AHxAfMjAAHy
        AXkCmgGZBXkFAAL0AfECRgFvAWkBbwGOAZMBbwHwAfEB8yMAAfIBeQKaBnkFAAL0AfICRwFvAUABkwFG
        AUABIAHwAfEB8yMAAfIBmQOaBXkFAAL0AfICRwFGAZMDRgEgAfEB8gH0IwAB8gF5A5oEeQF0ARsEAAEa
        Af8B8gNHARYBRwJGAUAB8QHyAfQjAAHyAXkCmgV5AnQB/wMAAUYB8gHzA0cBlANHAUYB8QHzAfQjAAHy
        AXkDmgR5AnQB/wMAAUcBRgHwA0cB4wRHAfEB8wH0IwAB8gF5AZkBmgGZBHkCdAH/AwABFwGUARcBvAHx
        AhoD8AEaAvMB9CMAAfIBeQKaAnkFdAH/AwABGgEWAZQB4wHyAf8F9ALzAfQjAAEbB3QBeQGZARoB/wMA
        AfQBGgEWARcBRgHxAf8D9APzAfQjAAH0AZkBGgEbAfMC9AH/BwAC9AHwAuMBbwEaBfQB8wH0IQAB/wH0
        AbwKBwG8AfQC/wH0AfII8QHzAvQD/w5QAf8DAAH0AbwB/wEAAv8B8gH0AgAF/wEHCv8BBwL/AQAB9AH/
        BPQE8wHvA/8BAAFQDhsBUAEAAf8BGwF5ARwB7wEHAe8B9wHtAewB7QL3Ae8B9AIAAbwK/wG8AwAB9ATz
        AvID8QK8Af8CAAFQDhsBUAH/AZoCeQEcAesB7QHvARMBEgFtAewC7wHwAf8CAAG8CP8B9AH/AbwDAAH0
        BvMB8gPxAfQBvAH/AQABUAIbA1ABeAIbAXgDUAIbAVABmQN5ARwB7QG7AgkCGQHsAe8BvAHxAfQCAAG8
        B/8C9AH/AbwDAAH0AfMB8AG8AfABvAEJArwBCQG1AbwB8QHzAQABUAYbAngGGwFQAZkDeQEcAewB7wHw
        ArwB8QHvAfIB9AH/AQABzwemAa0D9AH/AbwDAAL0AfABGQT/AvQBCQG8AfEB8wEAAVACGwFQAZkBGwF4
        AlABUQEbAZkBUAIbAVABmQN5ARwB7AHvBPABvAL/AgABhgf0AYYD9AH/AbwDAAL0AfABCQH/AbQB/wG0
        AfMC/wG8AfEB8wEAAVAEGwF4AVABUQF4AVABUQQbAVABmQGaAnkBHAHsAfcCBwK8AfMEAAGGAfQBrQGL
        AfABiwHwAfQBhgT0AbwDAAL0AfECCQGmAfMBpgG1Av8C8QHzAQABUAMbAXgBUAFRAhsBeAFQAVEDGwFQ
        AZkBmgJ5ARwB7QH3AQcB7wIHAfMEAAGGAfQBrQG0AbUBtAG1AfQBhgL0AfMB9AHwAwAC9AHxARkBtAGz
        AbQCrQG1AbQBvAHyAfQBAAFQAhsBeAFQAVEBGwF5AXgBGwF4AVABUQIbAVABmQGaAnkBHAHsAfcCBwK8
        AfMEAAGLAf8BrQEJAc8BCQHPAf8BiwH0AvMB9AHwAwAB8AH0AfEB8wGzAQkBrAG0AYYCtQG8AfMB9AEA
        AVACGwJQAZkBGwJQAXgBGwF4AVACGwFQAZkDeQEcAZIBBwLwArwB8wQAAa0B/wGtAfQBrQH0Aa0B/wGt
        AvMB8QH0AfADAAGtAfEB8wEZAbIB9AGsAbUBpgIJAbwB8wH0AQABUAIbARoCUAGZARsCUAF4BBsBUAGZ
        A3kBHAGSAe8CBwG8AfAB8wQAAa0B3QGtAQkBrQEJAa0B3QGtAfMC8QH0AfADAAKzAfIBCQH0BhkBvAHz
        AfQBAAFQAxsBGgJQApkCUAQbAVABmQN5AZkB7wEHAfABvALwAfMEAAGtB/8BrQHxA/cBvAMAAbQBugGz
        AfIE8AO8AfIB8wH0AQABUAQbARoEUAEIBBsBUAGZAZoBeQGZAfcB7wEHArwB8AHxAfMEAAG1B88BtAHx
        Ae8B/wHwAfQDAAHxAbMB2wGzAfIF9APzAfQBAAFQBRsBGgJQAQgFGwFQAZkBeQF0AfAB8gHzAfQB/wT0
        BgAB8QL/BfQBBwHxAfQEAAH0AQkBswHbAa0B8QT0A/MB9AEAAVAOGwFQAXkCdASZAnkBGggAAfMI8gH0
        BQAC9AHxA7QB8AX0AfMB9AEAAfYOUAH/ApkCGgIbAvQB/wcAAUIBTQE+BwABPgMAASgDAAFAAwABIAMA
        AQEBAAEBBgABARYAA/8BAAH+AQ8GAAHAAQcBgAEBBAABwAEDAYABAwQAAcABAAGAAQEEAAHAAQABgAEB
        BAABwAEBAYABAQQAAcABDwGAAQEEAAHAAQ8BgAEBBAABwAEPAYABAQQAAcABBwGAAQEEAAHAAQMBgAEB
        BAABwAEDAYABAQQAAcABAwGAAQEEAAHAAQMBgAEBBAABwAEDAYABAQQAAcABPwGAAQEKAAHiARgCAAGA
        AQECAAGAAQABwAEDAYABAwQAAcABAwGAAQEEAAHAAQMBgAEBAwABAQEAAQMBgAEBAwABAwEAAQMBgAEB
        AwABDwEAAQMBgAEBAwABDwEAAQMBgAEBAwABDwEAAQMBgAEBAwABDwEAAQMBgAEBAwABDwEAAQMBgAEB
        AwABDwEAAQMBgAEBAwABDwEAAQMBgAEBAwABDwHAAQcBgAEBAwABPwHAAQ8BgAEBAwABfws=
</value>
  </data>
</root>